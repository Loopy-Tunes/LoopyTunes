<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_keypad_driver" kind="class" language="C++" prot="public">
    <compoundname>KeypadDriver</compoundname>
    <includes refid="_keypad_driver_8h" local="no">KeypadDriver.h</includes>
    <innerclass refid="struct_keypad_driver_1_1_index" prot="public">KeypadDriver::Index</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_keypad_driver_1ac5b1a243fc0d40fbb6a8c7a3baf1c4b6" prot="private" static="no" mutable="no">
        <type><ref refid="struct_keypad_driver_1_1_index" kindref="compound">Index</ref></type>
        <definition>Index KeypadDriver::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <qualifiedname>KeypadDriver::index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="86" column="11" bodyfile="Drivers/KeypadDriver.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_keypad_driver_1a3b66bc3f3bdf9774277b90af1d38404b" prot="private" static="no" mutable="no">
        <type><ref refid="class_binary_parameter" kindref="compound">BinaryParameter</ref></type>
        <definition>BinaryParameter KeypadDriver::top</definition>
        <argsstring></argsstring>
        <name>top</name>
        <qualifiedname>KeypadDriver::top</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="87" column="21" bodyfile="Drivers/KeypadDriver.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_keypad_driver_1ac0c67ee80ab3595e41203f7a89f8dad2" prot="private" static="no" mutable="no">
        <type><ref refid="class_binary_parameter" kindref="compound">BinaryParameter</ref></type>
        <definition>BinaryParameter KeypadDriver::bottom</definition>
        <argsstring></argsstring>
        <name>bottom</name>
        <qualifiedname>KeypadDriver::bottom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="88" column="21" bodyfile="Drivers/KeypadDriver.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_keypad_driver_1acd2041f071077daa907db27f02f97ff7" prot="private" static="no" mutable="no">
        <type><ref refid="class_binary_parameter" kindref="compound">BinaryParameter</ref></type>
        <definition>BinaryParameter KeypadDriver::left</definition>
        <argsstring></argsstring>
        <name>left</name>
        <qualifiedname>KeypadDriver::left</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="89" column="21" bodyfile="Drivers/KeypadDriver.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_keypad_driver_1a8f77ece1292fc72afebe95cc0ac90956" prot="private" static="no" mutable="no">
        <type><ref refid="class_binary_parameter" kindref="compound">BinaryParameter</ref></type>
        <definition>BinaryParameter KeypadDriver::right</definition>
        <argsstring></argsstring>
        <name>right</name>
        <qualifiedname>KeypadDriver::right</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="90" column="21" bodyfile="Drivers/KeypadDriver.h" bodystart="90" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_keypad_driver_1a6218d0644c0f4c138df8f1d4f9f3b07c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KeypadDriver::KeypadDriver</definition>
        <argsstring>()</argsstring>
        <name>KeypadDriver</name>
        <qualifiedname>KeypadDriver::KeypadDriver</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="14" column="5" bodyfile="Drivers/KeypadDriver.h" bodystart="14" bodyend="14"/>
        <references refid="struct_keypad_driver_1_1_index_1a3a010e28b8a486ad52cedee8d1dc91e8" compoundref="_keypad_driver_8h" startline="35">KeypadDriver::Index::col</references>
        <references refid="struct_keypad_driver_1_1_index_1a72604689a80a503a6fa02b2845f36844" compoundref="_keypad_driver_8h" startline="34">KeypadDriver::Index::row</references>
      </memberdef>
      <memberdef kind="function" id="class_keypad_driver_1ad7802446ec1b11a2bd655ff86b6472cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KeypadDriver::init</definition>
        <argsstring>(dsy_gpio_pin t, dsy_gpio_pin b, dsy_gpio_pin l, dsy_gpio_pin r)</argsstring>
        <name>init</name>
        <qualifiedname>KeypadDriver::init</qualifiedname>
        <param>
          <type>dsy_gpio_pin</type>
          <declname>t</declname>
        </param>
        <param>
          <type>dsy_gpio_pin</type>
          <declname>b</declname>
        </param>
        <param>
          <type>dsy_gpio_pin</type>
          <declname>l</declname>
        </param>
        <param>
          <type>dsy_gpio_pin</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="16" column="10" bodyfile="Drivers/KeypadDriver.h" bodystart="16" bodyend="22"/>
        <references refid="class_binary_parameter_1a6765feacacb20ba94a391a059040ae1d" compoundref="_binary_parameter_8h" startline="24" endline="28">BinaryParameter::init</references>
      </memberdef>
      <memberdef kind="function" id="class_keypad_driver_1aba201d914666f4962f6cf99a49b7f45a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KeypadDriver::tick</definition>
        <argsstring>()</argsstring>
        <name>tick</name>
        <qualifiedname>KeypadDriver::tick</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="24" column="10" bodyfile="Drivers/KeypadDriver.h" bodystart="24" bodyend="30"/>
        <references refid="class_binary_parameter_1a062dee999020e270c30d8084e03b443d" compoundref="_binary_parameter_8h" startline="33" endline="38">BinaryParameter::tick</references>
      </memberdef>
      <memberdef kind="function" id="class_keypad_driver_1a575b2b28e034839ebe170cbdf3502719" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_keypad_driver_1_1_index" kindref="compound">Index</ref></type>
        <definition>Index KeypadDriver::getIndex</definition>
        <argsstring>() const</argsstring>
        <name>getIndex</name>
        <qualifiedname>KeypadDriver::getIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="38" column="11" bodyfile="Drivers/KeypadDriver.h" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_keypad_driver_1a2ef6125cc167f2996dc43a80583865a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KeypadDriver::isTopPressed</definition>
        <argsstring>()</argsstring>
        <name>isTopPressed</name>
        <qualifiedname>KeypadDriver::isTopPressed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="43" column="10" bodyfile="Drivers/KeypadDriver.h" bodystart="43" bodyend="43"/>
        <references refid="class_binary_parameter_1ab20ac67f6e4bf146f9674f676c3f25f4" compoundref="_binary_parameter_8h" startline="44" endline="44">BinaryParameter::isPressed</references>
      </memberdef>
      <memberdef kind="function" id="class_keypad_driver_1a1b46a63256a0b4e4ba8c05866b45ed0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KeypadDriver::isBottomPressed</definition>
        <argsstring>()</argsstring>
        <name>isBottomPressed</name>
        <qualifiedname>KeypadDriver::isBottomPressed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="44" column="10" bodyfile="Drivers/KeypadDriver.h" bodystart="44" bodyend="44"/>
        <references refid="class_binary_parameter_1ab20ac67f6e4bf146f9674f676c3f25f4" compoundref="_binary_parameter_8h" startline="44" endline="44">BinaryParameter::isPressed</references>
      </memberdef>
      <memberdef kind="function" id="class_keypad_driver_1ab8e05a495fe6d96bff11bf75f5080d72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KeypadDriver::isRightPressed</definition>
        <argsstring>()</argsstring>
        <name>isRightPressed</name>
        <qualifiedname>KeypadDriver::isRightPressed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="45" column="10" bodyfile="Drivers/KeypadDriver.h" bodystart="45" bodyend="45"/>
        <references refid="class_binary_parameter_1ab20ac67f6e4bf146f9674f676c3f25f4" compoundref="_binary_parameter_8h" startline="44" endline="44">BinaryParameter::isPressed</references>
      </memberdef>
      <memberdef kind="function" id="class_keypad_driver_1aea5b2ba9b04f1fc5cb304c1a05fa4076" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KeypadDriver::isLeftPressed</definition>
        <argsstring>()</argsstring>
        <name>isLeftPressed</name>
        <qualifiedname>KeypadDriver::isLeftPressed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="46" column="10" bodyfile="Drivers/KeypadDriver.h" bodystart="46" bodyend="46"/>
        <references refid="class_binary_parameter_1ab20ac67f6e4bf146f9674f676c3f25f4" compoundref="_binary_parameter_8h" startline="44" endline="44">BinaryParameter::isPressed</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_keypad_driver_1a603df5ba34278ebf40c4eb417973ed0e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KeypadDriver::topPressed</definition>
        <argsstring>()</argsstring>
        <name>topPressed</name>
        <qualifiedname>KeypadDriver::topPressed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="51" column="10" bodyfile="Drivers/KeypadDriver.h" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_keypad_driver_1a83349d42cec5bff4a62f42c5088dbaa9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KeypadDriver::bottomPressed</definition>
        <argsstring>()</argsstring>
        <name>bottomPressed</name>
        <qualifiedname>KeypadDriver::bottomPressed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="57" column="10" bodyfile="Drivers/KeypadDriver.h" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_keypad_driver_1a9b2207507e11040720656aa37197f6c2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KeypadDriver::leftPressed</definition>
        <argsstring>()</argsstring>
        <name>leftPressed</name>
        <qualifiedname>KeypadDriver::leftPressed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="63" column="10" bodyfile="Drivers/KeypadDriver.h" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_keypad_driver_1afd456a46b1cbef71c6378ccf1afc5afa" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KeypadDriver::rightPressed</definition>
        <argsstring>()</argsstring>
        <name>rightPressed</name>
        <qualifiedname>KeypadDriver::rightPressed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="69" column="10" bodyfile="Drivers/KeypadDriver.h" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_keypad_driver_1aac39fca6cb1a6fd613738f491e52dc69" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KeypadDriver::wrapIndex</definition>
        <argsstring>()</argsstring>
        <name>wrapIndex</name>
        <qualifiedname>KeypadDriver::wrapIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/KeypadDriver.h" line="75" column="10" bodyfile="Drivers/KeypadDriver.h" bodystart="75" bodyend="84"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class name: <ref refid="class_keypad_driver" kindref="compound">KeypadDriver</ref> Function: Driver for the keypad input, controls the movement between views </para>
    </detaileddescription>
    <location file="Drivers/KeypadDriver.h" line="11" column="1" bodyfile="Drivers/KeypadDriver.h" bodystart="12" bodyend="91"/>
    <listofallmembers>
      <member refid="class_keypad_driver_1ac0c67ee80ab3595e41203f7a89f8dad2" prot="private" virt="non-virtual"><scope>KeypadDriver</scope><name>bottom</name></member>
      <member refid="class_keypad_driver_1a83349d42cec5bff4a62f42c5088dbaa9" prot="private" virt="non-virtual"><scope>KeypadDriver</scope><name>bottomPressed</name></member>
      <member refid="class_keypad_driver_1a575b2b28e034839ebe170cbdf3502719" prot="public" virt="non-virtual"><scope>KeypadDriver</scope><name>getIndex</name></member>
      <member refid="class_keypad_driver_1ac5b1a243fc0d40fbb6a8c7a3baf1c4b6" prot="private" virt="non-virtual"><scope>KeypadDriver</scope><name>index</name></member>
      <member refid="class_keypad_driver_1ad7802446ec1b11a2bd655ff86b6472cd" prot="public" virt="non-virtual"><scope>KeypadDriver</scope><name>init</name></member>
      <member refid="class_keypad_driver_1a1b46a63256a0b4e4ba8c05866b45ed0c" prot="public" virt="non-virtual"><scope>KeypadDriver</scope><name>isBottomPressed</name></member>
      <member refid="class_keypad_driver_1aea5b2ba9b04f1fc5cb304c1a05fa4076" prot="public" virt="non-virtual"><scope>KeypadDriver</scope><name>isLeftPressed</name></member>
      <member refid="class_keypad_driver_1ab8e05a495fe6d96bff11bf75f5080d72" prot="public" virt="non-virtual"><scope>KeypadDriver</scope><name>isRightPressed</name></member>
      <member refid="class_keypad_driver_1a2ef6125cc167f2996dc43a80583865a4" prot="public" virt="non-virtual"><scope>KeypadDriver</scope><name>isTopPressed</name></member>
      <member refid="class_keypad_driver_1a6218d0644c0f4c138df8f1d4f9f3b07c" prot="public" virt="non-virtual"><scope>KeypadDriver</scope><name>KeypadDriver</name></member>
      <member refid="class_keypad_driver_1acd2041f071077daa907db27f02f97ff7" prot="private" virt="non-virtual"><scope>KeypadDriver</scope><name>left</name></member>
      <member refid="class_keypad_driver_1a9b2207507e11040720656aa37197f6c2" prot="private" virt="non-virtual"><scope>KeypadDriver</scope><name>leftPressed</name></member>
      <member refid="class_keypad_driver_1a8f77ece1292fc72afebe95cc0ac90956" prot="private" virt="non-virtual"><scope>KeypadDriver</scope><name>right</name></member>
      <member refid="class_keypad_driver_1afd456a46b1cbef71c6378ccf1afc5afa" prot="private" virt="non-virtual"><scope>KeypadDriver</scope><name>rightPressed</name></member>
      <member refid="class_keypad_driver_1aba201d914666f4962f6cf99a49b7f45a" prot="public" virt="non-virtual"><scope>KeypadDriver</scope><name>tick</name></member>
      <member refid="class_keypad_driver_1a3b66bc3f3bdf9774277b90af1d38404b" prot="private" virt="non-virtual"><scope>KeypadDriver</scope><name>top</name></member>
      <member refid="class_keypad_driver_1a603df5ba34278ebf40c4eb417973ed0e" prot="private" virt="non-virtual"><scope>KeypadDriver</scope><name>topPressed</name></member>
      <member refid="class_keypad_driver_1aac39fca6cb1a6fd613738f491e52dc69" prot="private" virt="non-virtual"><scope>KeypadDriver</scope><name>wrapIndex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
